// Import Firebase scripts
importScripts("https://www.gstatic.com/firebasejs/12.5.0/firebase-app-compat.js");
importScripts("https://www.gstatic.com/firebasejs/12.5.0/firebase-messaging-compat.js");

// Firebase configuration
/*
How to get firebase config:
    1. Go to your Firebase Console
    2. Select your project
    3. Click on the gear icon next to "Project Overview" to go to "Project settings"
    4. Scroll down to "Your apps" section and select the web app
    5. You will find the Firebase SDK snippet which contains your configuration
    6. Copy the config object and paste it below
*/

// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
    apiKey: "",
    authDomain: "",
    projectId: "",
    storageBucket: "",
    messagingSenderId: "",
    appId: "",
    measurementId: ""
};

// Initialize Firebase
firebase.initializeApp(firebaseConfig);

// Get messaging instance
const messaging = firebase.messaging();

// Background message handler
messaging.onBackgroundMessage((payload) => {
    console.log('=== BACKGROUND MESSAGE RECEIVED ===');
    console.log('[firebase-messaging-sw.js] Payload:', payload);

    // Extract notification data
    const notificationTitle = payload.notification?.title || 'Srikandi Sehat';
    const notificationOptions = {
        body: payload.notification?.body || 'Anda memiliki notifikasi baru',
        icon: '/favicon.png', // Replace with your icon path if any
        badge: '/favicon.png',
        data: payload.data,
        tag: payload.messageId || 'default-tag',
        requireInteraction: false,
    };

    console.log('Showing notification:', notificationTitle, notificationOptions);
    console.log('===================================');

    return self.registration.showNotification(notificationTitle, notificationOptions);
});

// Handle notification click
self.addEventListener('notificationclick', (event) => {
    console.log('=== NOTIFICATION CLICKED ===');
    console.log('Notification:', event.notification);
    console.log('Data:', event.notification.data);
    console.log('===========================');

    event.notification.close();

    // Open the app or navigate to specific page
    event.waitUntil(
        clients.matchAll({ type: 'window', includeUncontrolled: true }).then((clientList) => {
            // Check if app is already open
            for (let client of clientList) {
                if (client.url.includes(self.location.origin) && 'focus' in client) {
                    return client.focus();
                }
            }
            // If app is not open, open it
            if (clients.openWindow) {
                return clients.openWindow('/');
            }
        })
    );
});